# -*- coding: utf-8 -*-
"""WDA_Lab2_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16-3EX3QSytQ-epAE8ZSqpldatBQBlgPS
"""

import json
import random
import time
from google.colab import drive
import json

drive.mount('/content/drive')

file_path = '/content/drive/MyDrive/gwsh/imiona.json'

# ZADANIE 2:
with open(file_path, 'r') as json_file:
    data = json.load(json_file)
print("ZADANIE 2: Wczytano dane z pliku imiona.json")

# ZADANIE 3:
def find_name_julian(names):
    start_time = time.time()
    count = 0
    for name_data in names:
        if name_data[11].upper() == "JULIAN":
            count += 1
    end_time = time.time()
    return count, end_time - start_time

count_julian, time_taken_julian = find_name_julian(data["data"])
print(f"ZADANIE 3: Liczba imion 'Julian': {count_julian}, Czas wykonania: {time_taken_julian:.6f} sekundy")

# ZADANIE 4:
start_time_hispanic = time.time()
hispanic_names = [name_data for name_data in data["data"] if name_data[10] == "HISPANIC"]
end_time_hispanic = time.time()
time_taken_hispanic = end_time_hispanic - start_time_hispanic
print(f"ZADANIE 4: Wczytano dane z pliku imiona.json, Czas wykonania: {time_taken_hispanic:.6f} sekundy")


# ZADANIE 5:
start_time_unique = time.time()
unique_names = set(name_data[11] for name_data in data["data"])
end_time_unique = time.time()
time_taken_unique = end_time_unique - start_time_unique
print(f"ZADANIE 5: Wczytano dane z pliku imiona.json, Czas wykonania: {time_taken_unique:.6f} sekundy")

# ZADANIE 6:
start_time_random = time.time()
random_numbers = [random.randint(1, 1000) for _ in range(100)]
end_time_random = time.time()
time_taken_random = end_time_random - start_time_random
print(f"ZADANIE 6: Wygenerowano 100 pseudo-randomowych liczb, Czas wykonania: {time_taken_random:.6f} sekundy")

# ZADANIE 7:
start_time_bubble = time.time()
def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]

bubble_sort(random_numbers)
end_time_bubble = time.time()
time_taken_bubble = end_time_bubble - start_time_bubble
print(f"ZADANIE 7: Posortowano tablicę pseudo-randomowych liczb, Czas wykonania: {time_taken_bubble:.6f} sekundy")

# ZADANIE 8:
hispanic_names_list = list(hispanic_names)
start_time_sort = time.time()
bubble_sort(hispanic_names_list)
end_time_sort = time.time()
time_taken_sort = end_time_sort - start_time_sort
print(f"ZADANIE 8: Posortowano listę hiszpańskich imion, Czas wykonania: {time_taken_sort:.6f} sekundy")

# ZADANIE 9:
def binary_search(arr, target):
    left, right = 0, len(arr) - 1
    target = target.upper()
    while left <= right:
        mid = left + (right - left) // 2
        current_name = arr[mid][11].upper()
        if current_name == target:
            return mid
        elif current_name < target:
            left = mid + 1
        else:
            right = mid - 1
    return -1

julian_index = binary_search(hispanic_names_list, "JULIAN")
if julian_index != -1:
    print(f"ZADANIE 9: Imię 'JULIAN' znalezione na pozycji {julian_index} w liście hiszpańskich imion.")
else:
    print("ZADANIE 9: Imię 'JULIAN' nie znalezione w liście hiszpańskich imion.")